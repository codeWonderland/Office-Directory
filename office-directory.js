// Generated by CoffeeScript 1.12.6
(function() {
  var mq;

  mq = window.matchMedia("(max-width: 768px)");

  $(document).ready(function() {
    var autoComplete, awesomplete, contact, input, k, len, ref;
    if (!mq.matches) {
      toIndex(0);
      autoComplete = [];
      ref = document.getElementById('contact-list').getElementsByClassName('contact');
      for (k = 0, len = ref.length; k < len; k++) {
        contact = ref[k];
        autoComplete.push(contact.getElementsByClassName('name')[0].innerHTML.replace(/&amp;/g, '&'));
      }
      input = document.getElementById('office-search');
      awesomplete = new Awesomplete(input);
      awesomplete.list = autoComplete;
      $("#office-search").bind('keypress', function(e) {
        if (e.which === 13) {
          setPage(searchDir(document.getElementById('office-search').value, autoComplete));
          document.getElementById('office-search').value = '';
        }
      });
    } else {
      buildMobile();
    }
  });

  this.buildMobile = function() {
    var contacts, container, detail, i, k, l, len, len1, len2, line, link, m, ref, ref1, ref2, tempHTML;
    i = 0;
    contacts = document.getElementById('contact-list').getElementsByClassName('contact');
    container = document.getElementsByClassName('mobile-dir')[0].getElementsByClassName('contact-container')[0];
    tempHTML = '';
    while (i < contacts.length) {
      if (i === 0) {
        tempHTML += '<h2 class="directory-heading" name="' + contacts[i].getElementsByClassName('name')[0].innerHTML[0].toLowerCase() + '">' + contacts[i].getElementsByClassName('name')[0].innerHTML + '</h2>';
      } else if (contacts[i].getElementsByClassName('name')[0].innerHTML[0].toLowerCase() !== contacts[i - 1].getElementsByClassName('name')[0].innerHTML[0].toLowerCase()) {
        tempHTML += '<hr><h2 class="directory-heading" name="' + contacts[i].getElementsByClassName('name')[0].innerHTML[0].toLowerCase() + '">' + contacts[i].getElementsByClassName('name')[0].innerHTML + '</h2>';
      } else {
        tempHTML += '<h2 class="directory-heading">' + contacts[i].getElementsByClassName('name')[0].innerHTML + '</h2>';
      }
      ref = contacts[i].getElementsByClassName('detail');
      for (k = 0, len = ref.length; k < len; k++) {
        detail = ref[k];
        if (detail.getElementsByClassName('heading').length) {
          tempHTML += '<p><strong>' + detail.getElementsByClassName('heading')[0].innerHTML + '</strong>';
        }
        ref1 = detail.getElementsByClassName('line');
        for (l = 0, len1 = ref1.length; l < len1; l++) {
          line = ref1[l];
          tempHTML += '<br />' + line.innerHTML;
        }
        ref2 = detail.getElementsByTagName('a');
        for (m = 0, len2 = ref2.length; m < len2; m++) {
          link = ref2[m];
          tempHTML += '<br /><a title="' + link.title + '" class="' + link.className + '" href="' + link.href + '">' + link.innerHTML + '</a>';
        }
        tempHTML += '</p>';
      }
      tempHTML += '<br />';
      i++;
      container.innerHTML = tempHTML;
    }
  };

  this.searchDir = function(key, list) {
    var i;
    i = 0;
    while (i < list.length) {
      if (key === list[i]) {
        return i;
      }
      i++;
    }
    return 0;
  };

  this.setPage = function(pageIndex) {
    var contact, contactList, counter, details, done, i, lines, maxLines, navHTML, pLength, pages;
    if ($('#pages').hasClass('index')) {
      $('#pages').removeClass('index');
    }
    contactList = document.getElementById('contact-list');
    if (pageIndex >= contactList.length) {
      pageIndex = contactList.length - 1;
    }
    contact = contactList.getElementsByClassName('contact')[pageIndex];
    pages = document.getElementById('pages');
    maxLines = 16;
    maxLines -= (headerLines(contact.getElementsByClassName('name')[0].innerHTML) - 1) * 2;
    details = contact.getElementsByClassName('detail');
    counter = 0;
    lines = 0;
    done = false;
    while (!done && counter !== details.length) {
      pLength = (details[counter].getElementsByClassName('heading').length * 3) + details[counter].getElementsByClassName('line').length + details[counter].getElementsByClassName('link').length + (details[counter].getElementsByClassName('btn').length * 2);
      if (lines + pLength < maxLines) {
        lines += pLength;
        counter++;
      } else {
        done = true;
      }
    }
    i = 0;
    document.getElementById('page-1').innerHTML = '<h1 data-index="' + pageIndex + '">' + contact.getElementsByClassName('name')[0].innerHTML + '</h1>';
    document.getElementById('page-2').innerHTML = "";
    while (i < counter) {
      document.getElementById('page-1').innerHTML += generateDetailHTML(details[i]);
      i++;
    }
    while (i < details.length) {
      document.getElementById('page-2').innerHTML += generateDetailHTML(details[i]);
      i++;
    }
    navHTML = '<div class="dir-nav">';
    if (pageIndex !== 0) {
      navHTML += '<a onclick="prev()" class="btn prev">❮ Prev</a>';
    }
    navHTML += '<a onclick="toIndex(0)" class="btn index">Index</a></div>';
    document.getElementById('page-1').innerHTML += navHTML;
    if (pageIndex !== (contactList.getElementsByClassName('contact').length - 1)) {
      document.getElementById('page-2').innerHTML += '<div class="dir-nav">' + '<a onclick="next()" class="btn next">Next ❯</a>' + '</div>';
    }
  };

  this.next = function() {
    setPage(parseInt(document.getElementById('page-1').getElementsByTagName('h1')[0].getAttribute('data-index')) + 1);
  };

  this.prev = function() {
    setPage(parseInt(document.getElementById('page-1').getElementsByTagName('h1')[0].getAttribute('data-index')) - 1);
  };

  this.generateDetailHTML = function(detail) {
    var detailHTML, j;
    detailHTML = '<p>';
    if (detail.getElementsByClassName('heading').length) {
      detailHTML += '<strong>' + detail.getElementsByClassName('heading')[0].innerHTML + '</strong><br/>';
    }
    if (detail.getElementsByClassName('line').length) {
      j = 0;
      while (j < detail.getElementsByClassName('line').length) {
        detailHTML += detail.getElementsByClassName('line')[j].innerHTML;
        if (j !== detail.getElementsByClassName('line').length - 1) {
          detailHTML += '<br/>';
        }
        j++;
      }
    }
    if (detail.getElementsByClassName('link').length) {
      j = 0;
      while (j < detail.getElementsByClassName('link').length) {
        detailHTML += '<a href="' + detail.getElementsByClassName('link')[j].getAttribute('href') + '" title="' + detail.getElementsByClassName('link')[j].getAttribute('title') + '" class="link">';
        detailHTML += detail.getElementsByClassName('link')[j].innerHTML;
        detailHTML += '</a>';
        if (j !== detail.getElementsByClassName('link').length - 1) {
          detailHTML += '<br/>';
        }
        j++;
      }
    }
    if (detail.getElementsByClassName('btn').length) {
      j = 0;
      while (j < detail.getElementsByClassName('btn').length) {
        detailHTML += '<a href="' + detail.getElementsByClassName('btn')[j].getAttribute('href') + '" title="' + detail.getElementsByClassName('btn')[j].getAttribute('title') + '" class="btn">';
        detailHTML += detail.getElementsByClassName('btn')[j].innerHTML;
        detailHTML += '</a>';
        if (j !== detail.getElementsByClassName('btn').length - 1) {
          detailHTML += '<br/>';
        }
        j++;
      }
    }
    detailHTML += '</p>';
    return detailHTML;
  };

  this.headerLines = function(header) {
    var char, currentNewline, i, j, k, len, newline, numLines, numSpaces, spaceIndex, spacesPassed;
    numSpaces = 0;
    for (k = 0, len = header.length; k < len; k++) {
      char = header[k];
      if (char === ' ') {
        numSpaces++;
      }
    }
    currentNewline = 0;
    numLines = 1;
    i = 0;
    while (i < numSpaces) {
      newline = false;
      j = currentNewline;
      spaceIndex = 0;
      spacesPassed = 0;
      while (!newline && j < header.length) {
        if (header[j] === ' ' && j !== (header.length - 1)) {
          spaceIndex = j;
          spacesPassed++;
        }
        if ((j - currentNewline) > (15 - 1)) {
          currentNewline = spaceIndex + 1;
          if (header[j] !== ' ') {
            numLines++;
          } else if (j !== (header.length - 1)) {
            numLines++;
          }
          i += spacesPassed - 1;
          newline = true;
        } else {
          j++;
        }
      }
      i++;
    }
    return numLines;
  };

  this.indexLines = function(header) {
    var char, currentNewline, i, j, k, len, newline, numLines, numSpaces, spaceIndex, spacesPassed;
    numSpaces = 0;
    for (k = 0, len = header.length; k < len; k++) {
      char = header[k];
      if (char === ' ') {
        numSpaces++;
      }
    }
    currentNewline = 0;
    numLines = 1;
    i = 0;
    while (i < numSpaces) {
      newline = false;
      j = currentNewline;
      spaceIndex = 0;
      spacesPassed = 0;
      while (!newline && j < header.length) {
        if (header[j] === ' ' && j !== (header.length - 1)) {
          spaceIndex = j;
          spacesPassed++;
        }
        if ((j - currentNewline) > (32 - 1)) {
          currentNewline = spaceIndex + 1;
          if (header[j] !== ' ') {
            numLines++;
          } else if (j !== (header.length - 1)) {
            numLines++;
          }
          i += spacesPassed - 1;
          newline = true;
        } else {
          j++;
        }
      }
      i++;
    }
    return numLines;
  };

  this.toIndex = function(index) {
    var contactList, contacts, counter, done, i, lines, p1Lines, p2Lines, pLength, pages;
    if (!$('#pages').hasClass('index')) {
      $('#pages').addClass('index');
    }
    contactList = document.getElementById('contact-list');
    contacts = contactList.getElementsByClassName('contact');
    pages = document.getElementById('pages');
    p1Lines = 8;
    p2Lines = 10;
    counter = index;
    lines = 0;
    done = false;
    while (!done && counter !== contacts.length) {
      pLength = indexLines(contacts[counter].getElementsByClassName('name')[0].innerHTML);
      if (lines + pLength <= p1Lines) {
        lines += pLength;
        counter++;
      } else {
        done = true;
      }
    }
    i = index;
    if (!index) {
      document.getElementById('page-1').innerHTML = '<h1>Index</h1>';
    } else {
      document.getElementById('page-1').innerHTML = '<h1>Index Cont.</h1>';
    }
    while (i < counter) {
      document.getElementById('page-1').innerHTML += '<li><a alt="link to ' + contacts[i].getElementsByClassName('name')[0].innerHTML + 'page" onclick="setPage(' + i + ')">' + contacts[i].getElementsByClassName('name')[0].innerHTML + '</a></li>';
      i++;
    }
    lines = 0;
    done = false;
    while (!done && counter !== contacts.length) {
      pLength = indexLines(contacts[counter].getElementsByClassName('name')[0].innerHTML);
      if (lines + pLength <= p2Lines) {
        lines += pLength;
        counter++;
      } else {
        done = true;
      }
    }
    document.getElementById('page-2').innerHTML = '<ul>';
    while (i < counter) {
      document.getElementById('page-2').innerHTML += '<li><a alt="link to ' + contacts[i].getElementsByClassName('name')[0].innerHTML + 'page" onclick="setPage(' + i + ')">' + contacts[i].getElementsByClassName('name')[0].innerHTML + '</a></li>';
      i++;
    }
    document.getElementById('page-2').innerHTML += '</ul>';
    if (index !== 0) {
      document.getElementById('page-1').innerHTML += '<div class="dir-nav"><a onclick="toIndex(0)" class="btn prev">❮ First</a></div>';
    }
    if (counter !== contacts.length) {
      document.getElementById('page-2').innerHTML += '<div class="dir-nav">' + '<a onclick="toIndex(' + counter + ')" class="btn next">Next ❯</a>' + '</div>';
    }
  };

}).call(this);

//# sourceMappingURL=office-directory.js.map
